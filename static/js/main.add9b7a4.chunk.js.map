{"version":3,"sources":["components/ContactList/ContactListStyled.js","components/ContactList/ContactList.js","components/ContactForm/ContactFormStyled.js","components/ContactForm/ContactForm.js","components/Filter/FilterStyled.js","components/Filter/Filter.js","components/App.js","index.js"],"names":["ContactListWrapper","styled","div","ContactList","contacts","onDelete","handleDelete","e","target","name","className","map","id","number","type","onClick","FormWrapper","INITIAL_STATE","ContactForm","state","handleChangeForm","value","setState","handleSubmit","preventDefault","props","isUniqe","onAdd","uuidv4","alert","resetForm","this","onSubmit","pattern","title","placeholder","required","onChange","Component","FilterWrapper","Filter","setFilter","tupe","App","filter","find","contact","newContact","prevState","newContacts","elem","contactsList","toLowerCase","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.add9b7a4.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const ContactListWrapper = styled.div`\r\n  .contactListItem {\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n  .contactListItem::before {\r\n    content: \"\";\r\n    width: 5px;\r\n    height: 5px;\r\n    border-radius: 50%;\r\n    background-color: black;\r\n    margin-right: 10px;\r\n  }\r\n  .contactListDeleteButton {\r\n    width: 80px;\r\n    height: 30px;\r\n    margin-left: 20px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { ContactListWrapper } from \"./ContactListStyled\";\r\n\r\nconst ContactList = ({ contacts, onDelete }) => {\r\n  const handleDelete = (e) => {\r\n    onDelete(e.target.name);\r\n  };\r\n  return (\r\n    <ContactListWrapper>\r\n      <ul className=\"contactList\">\r\n        {contacts.map(({ id, name, number }) => {\r\n          return (\r\n            <li key={id} className=\"contactListItem\">\r\n              <p>\r\n                {name}: {number}\r\n              </p>\r\n              <button\r\n                type=\"button\"\r\n                name={name}\r\n                onClick={handleDelete}\r\n                className=\"contactListDeleteButton\"\r\n              >\r\n                Delete\r\n              </button>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </ContactListWrapper>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string)).isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import styled from \"styled-components\";\r\n\r\nexport const FormWrapper = styled.div`\r\n  border: 1px solid black;\r\n  width: 500px;\r\n  margin-left: 20px;\r\n  margin-bottom: 30px;\r\n\r\n  .formItem {\r\n    display: block;\r\n    margin-bottom: 10px;\r\n    margin-left: 20px;\r\n  }\r\n\r\n  .lableTitle {\r\n    margin-top: 0;\r\n    margin-bottom: 5px;\r\n  }\r\n\r\n  .submitButton {\r\n    margin-left: 20px;\r\n    margin-bottom: 20px;\r\n    margin-top: 10px;\r\n  }\r\n`;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport { FormWrapper } from \"./ContactFormStyled\";\r\n\r\nconst INITIAL_STATE = {\r\n  name: \"\",\r\n  number: \"\",\r\n};\r\n\r\nclass ContactForm extends Component {\r\n  static propTypes = {\r\n    isUniqe: PropTypes.func.isRequired,\r\n    onAdd: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChangeForm = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    const { isUniqe, onAdd } = this.props;\r\n\r\n    if (isUniqe(name)) {\r\n      onAdd({ id: uuidv4(), name, number });\r\n    } else {\r\n      alert(`${name} is alredy in contacts`);\r\n    }\r\n\r\n    this.resetForm();\r\n  };\r\n\r\n  resetForm = () => {\r\n    this.setState(INITIAL_STATE);\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <FormWrapper>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label className=\"formItem\">\r\n            <p className=\"lableTitle\">Name</p>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              placeholder=\"Name\"\r\n              required\r\n              value={name}\r\n              onChange={this.handleChangeForm}\r\n            />\r\n          </label>\r\n          <label className=\"formItem\">\r\n            <p className=\"lableTitle\">Number</p>\r\n            <input\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              placeholder=\"Phone\"\r\n              required\r\n              value={number}\r\n              onChange={this.handleChangeForm}\r\n            />\r\n          </label>\r\n          <button type=\"submit\" className=\"submitButton\">\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </FormWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import styled from \"styled-components\";\r\n\r\nexport const FilterWrapper = styled.div`\r\n  margin-left: 20px;\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { FilterWrapper } from \"./FilterStyled\";\r\n\r\nconst Filter = ({ setFilter, value }) => {\r\n  const handleChange = (e) => {\r\n    setFilter(e.target.value);\r\n  };\r\n  return (\r\n    <FilterWrapper>\r\n      <label>\r\n        Filter:\r\n        <input tupe=\"text\" value={value} onChange={handleChange}></input>\r\n      </label>\r\n    </FilterWrapper>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  setFilter: PropTypes.func.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React, { Component } from \"react\";\n\nimport ContactList from \"./ContactList/ContactList\";\nimport ContactForm from \"./ContactForm/ContactForm\";\nimport Filter from \"./Filter/Filter\";\n\nclass App extends Component {\n  state = { contacts: [], filter: \"\" };\n\n  isUniqe = (name) => {\n    const { contacts } = this.state;\n    const isExist = contacts.find((contact) => contact.name === name);\n\n    return !isExist;\n  };\n\n  onAdd = (newContact) => {\n    this.setState((prevState) => ({\n      contacts: [...prevState.contacts, newContact],\n    }));\n  };\n\n  onDelete = (name) => {\n    const { contacts } = this.state;\n\n    const newContacts = contacts.filter((elem) => elem.name !== name);\n    this.setState({ contacts: newContacts });\n  };\n\n  setFilter = (value) => {\n    this.setState({ filter: value });\n  };\n\n  render() {\n    const contactsList = this.state.contacts.filter((elem) =>\n      elem.name.toLowerCase().includes(this.state.filter.toLowerCase())\n    );\n\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm isUniqe={this.isUniqe} onAdd={this.onAdd} />\n\n        <h2>Contacts</h2>\n        <Filter setFilter={this.setFilter} value={this.state.filter} />\n        <ContactList contacts={contactsList} onDelete={this.onDelete} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./components/App\";\nimport \"modern-normalize/modern-normalize.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}